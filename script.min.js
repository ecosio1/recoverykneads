

document.addEventListener('DOMContentLoaded', function() {
 
 const hamburger = document.querySelector('.hamburger');
 const navMenu = document.querySelector('.nav-menu');
 
 if (hamburger && navMenu) {
 hamburger.addEventListener('click', function() {
 const isExpanded = this.getAttribute('aria-expanded') === 'true';
 this.setAttribute('aria-expanded', !isExpanded);
 navMenu.classList.toggle('active');
 
 
 if (!isExpanded) {
 this.setAttribute('aria-label', 'Close mobile navigation');
 
 const firstMenuItem = navMenu.querySelector('a');
 if (firstMenuItem) {
 setTimeout(() => firstMenuItem.focus(), 100);
 }
 } else {
 this.setAttribute('aria-label', 'Toggle mobile navigation');
 }
 });
 
 
 document.addEventListener('keydown', function(e) {
 if (e.key === 'Escape' && navMenu.classList.contains('active')) {
 navMenu.classList.remove('active');
 hamburger.setAttribute('aria-expanded', 'false');
 hamburger.setAttribute('aria-label', 'Toggle mobile navigation');
 hamburger.focus();
 }
 });
 
 
 navMenu.addEventListener('keydown', function(e) {
 const menuItems = this.querySelectorAll('a');
 const currentIndex = Array.from(menuItems).indexOf(document.activeElement);
 
 if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {
 e.preventDefault();
 const nextIndex = (currentIndex + 1) % menuItems.length;
 menuItems[nextIndex].focus();
 } else if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {
 e.preventDefault();
 const prevIndex = (currentIndex - 1 + menuItems.length) % menuItems.length;
 menuItems[prevIndex].focus();
 }
 });
 }
 
 
 document.querySelectorAll('.nav-menu a').forEach(link => {
 link.addEventListener('click', () => {
 navMenu.classList.remove('active');
 });
 });
 
 
 document.querySelectorAll('a[href^="#"]').forEach(anchor => {
 anchor.addEventListener('click', function(e) {
 e.preventDefault();
 const target = document.querySelector(this.getAttribute('href'));
 if (target) {
 const offsetTop = target.offsetTop - 80; 
 window.scrollTo({
 top: offsetTop,
 behavior: 'smooth'
 });
 }
 });
 });
 
 
 showDirectBookingOption();
 
 
 window.addEventListener('scroll', function() {
 const navbar = document.querySelector('.navbar');
 const scrollY = window.scrollY;
 
 if (scrollY > 50) {
 navbar.style.background = 'rgba(255, 255, 255, 0.98)';
 navbar.style.boxShadow = '0 6px 40px rgba(139, 74, 59, 0.15), 0 2px 8px rgba(244, 168, 124, 0.1)';
 navbar.classList.add('scrolled');
 } else {
 navbar.style.background = 'rgba(255, 255, 255, 0.95)';
 navbar.style.boxShadow = '0 4px 32px rgba(139, 74, 59, 0.12), 0 2px 8px rgba(244, 168, 124, 0.1)';
 navbar.classList.remove('scrolled');
 }
 });
 
 
 const observerOptions = {
 threshold: 0.1,
 rootMargin: '0px 0px -50px 0px'
 };
 
 
 const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
 
 const observer = new IntersectionObserver(function(entries) {
 entries.forEach((entry, index) => {
 if (entry.isIntersecting) {
 const delay = prefersReducedMotion ? 0 : index * 100;
 setTimeout(() => {
 entry.target.style.opacity = '1';
 entry.target.style.transform = 'translateY(0)';
 if (!prefersReducedMotion) {
 entry.target.classList.add('fade-in-up');
 }
 }, delay); 
 }
 });
 }, observerOptions);
 
 
 document.querySelectorAll('.service-card').forEach((el, index) => {
 el.style.opacity = '0';
 el.style.transform = 'translateY(30px)';
 el.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
 el.style.transitionDelay = `${index * 0.1}s`;
 observer.observe(el);
 });
 
 document.querySelectorAll('.testimonial-card').forEach((el, index) => {
 el.style.opacity = '0';
 el.style.transform = 'translateY(30px)';
 el.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
 el.style.transitionDelay = `${index * 0.15}s`;
 observer.observe(el);
 });
 
 document.querySelectorAll('.about-text, .contact-item').forEach(el => {
 el.style.opacity = '0';
 el.style.transform = 'translateY(20px)';
 el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
 observer.observe(el);
 });
});


function submitAppointment(appointmentData) {
 
 const submitButton = document.querySelector('#appointmentForm button[type="submit"]');
 const originalText = submitButton.textContent;
 submitButton.textContent = 'Submitting...';
 submitButton.disabled = true;
 
 
 const emailSubject = 'New Appointment Request - Recovery Kneads';
 const emailBody = `
New Appointment Request

Name: ${appointmentData.name}
Email: ${appointmentData.email}
Phone: ${appointmentData.phone}
Service: ${appointmentData.service}
Date: ${appointmentData.date}
Time: ${appointmentData.time}
Notes: ${appointmentData.notes || 'None'}

Please contact the client to confirm this appointment.
 `.trim();
 
 
 const mailtoLink = `mailto:massagebyerikag@gmail.com?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;
 
 
 setTimeout(() => {
 
 showSuccessMessage();
 
 
 document.getElementById('appointmentForm').reset();
 
 
 submitButton.textContent = originalText;
 submitButton.disabled = false;
 
 
 console.log('Appointment request submitted:', appointmentData);
 
 
 
 
 }, 1500);
}


function showSuccessMessage() {
 
 const existingMessage = document.querySelector('.success-message');
 if (existingMessage) {
 existingMessage.remove();
 }
 
 
 const successDiv = document.createElement('div');
 successDiv.className = 'success-message show';
 successDiv.innerHTML = `
 <strong>Thank you!</strong> Your appointment request has been submitted successfully. 
 We'll contact you within 24 hours to confirm your appointment and discuss payment options.
 <br><br>
 <small>If you need immediate assistance, please call us at (239) 427-4757</small>
 `;
 
 
 const form = document.querySelector('.appointment-form');
 if (form) {
 form.insertBefore(successDiv, form.firstChild);
 }
 
 
 setTimeout(() => {
 successDiv.classList.remove('show');
 setTimeout(() => {
 successDiv.remove();
 }, 300);
 }, 5000);
 
 
 successDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
}


document.addEventListener('change', function(e) {
 if (e.target.id === 'service') {
 const selectedService = e.target.value;
 
 
 console.log('Selected service:', selectedService);
 }
});


function checkTimeAvailability(date, time) {
 
 
 
 
 const selectedDate = new Date(date);
 const dayOfWeek = selectedDate.getDay(); 
 
 if (dayOfWeek === 1 && time === '14:00') { 
 return false;
 }
 
 return true;
}


document.addEventListener('change', function(e) {
 if (e.target.id === 'date' || e.target.id === 'time') {
 const dateValue = document.getElementById('date').value;
 const timeValue = document.getElementById('time').value;
 
 if (dateValue && timeValue) {
 if (!checkTimeAvailability(dateValue, timeValue)) {
 alert('Sorry, that time slot is not available. Please choose a different time.');
 document.getElementById('time').value = '';
 }
 }
 }
});


function initContactForm() {
 const contactForm = document.getElementById('contactForm');
 if (contactForm) {
 contactForm.addEventListener('submit', function(e) {
 e.preventDefault();
 
 alert('Thank you for your message! We\'ll get back to you soon.');
 this.reset();
 });
 }
}


document.addEventListener('DOMContentLoaded', initContactForm);


function formatPhoneNumber(value) {
 const phoneNumber = value.replace(/[^\d]/g, '');
 const phoneNumberLength = phoneNumber.length;
 
 if (phoneNumberLength < 4) {
 return phoneNumber;
 } else if (phoneNumberLength < 7) {
 return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;
 } else {
 return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;
 }
}


document.addEventListener('input', function(e) {
 if (e.target.id === 'phone') {
 e.target.value = formatPhoneNumber(e.target.value);
 }
});


function showDirectBookingOption() {
 const widgetContainer = document.getElementById('square-appointments-widget');
 if (widgetContainer) {
 widgetContainer.innerHTML = `
 <div class="calendar-booking-container">
 <div class="booking-steps">
 <div class="step active" data-step="1">
 <span class="step-number">1</span>
 <span class="step-label">Service</span>
 </div>
 <div class="step" data-step="2">
 <span class="step-number">2</span>
 <span class="step-label">Date & Time</span>
 </div>
 <div class="step" data-step="3">
 <span class="step-number">3</span>
 <span class="step-label">Details</span>
 </div>
 </div>

 <!-- Step 1: Service Selection -->
 <div class="booking-step step-1 active">
 <h3>Choose Your Service</h3>
 <div class="service-options">
 <div class="service-option" data-service="therapeutic-60" data-duration="60" data-price="80">
 <div class="service-info">
 <h4>Therapeutic Massage</h4>
 <p>60 minutes - Perfect for stress relief and relaxation</p>
 </div>
 <div class="service-price">$80</div>
 </div>
 <div class="service-option" data-service="therapeutic-90" data-duration="90" data-price="120">
 <div class="service-info">
 <h4>Therapeutic Massage</h4>
 <p>90 minutes - Extended session for deeper wellness</p>
 </div>
 <div class="service-price">$120</div>
 </div>
 <div class="service-option" data-service="deep-tissue-60" data-duration="60" data-price="85">
 <div class="service-info">
 <h4>Deep Tissue Massage</h4>
 <p>60 minutes - Targeted therapy for chronic pain</p>
 </div>
 <div class="service-price">$85</div>
 </div>
 <div class="service-option" data-service="deep-tissue-90" data-duration="90" data-price="125">
 <div class="service-info">
 <h4>Deep Tissue Massage</h4>
 <p>90 minutes - Comprehensive pain relief session</p>
 </div>
 <div class="service-price">$125</div>
 </div>
 <div class="service-option" data-service="sports-60" data-duration="60" data-price="85">
 <div class="service-info">
 <h4>Sports Massage</h4>
 <p>60 minutes - For athletes and active individuals</p>
 </div>
 <div class="service-price">$85</div>
 </div>
 </div>
 <div class="step-navigation">
 <button class="btn-primary continue-btn" disabled>Continue to Date & Time</button>
 </div>
 </div>

 <!-- Step 2: Calendar and Time Selection -->
 <div class="booking-step step-2">
 <h3>Select Date & Time</h3>
 <div class="calendar-container">
 <div class="calendar-header">
 <button class="calendar-nav prev-month" aria-label="Previous month">&lt;</button>
 <h4 class="calendar-title"></h4>
 <button class="calendar-nav next-month" aria-label="Next month">&gt;</button>
 </div>
 <div class="calendar-grid">
 <div class="calendar-days-header">
 <div class="day-header">Sun</div>
 <div class="day-header">Mon</div>
 <div class="day-header">Tue</div>
 <div class="day-header">Wed</div>
 <div class="day-header">Thu</div>
 <div class="day-header">Fri</div>
 <div class="day-header">Sat</div>
 </div>
 <div class="calendar-days"></div>
 </div>
 </div>
 <div class="time-slots-container">
 <h4>Available Times</h4>
 <div class="time-slots">
 <p class="select-date-message">Please select a date to view available times</p>
 </div>
 </div>
 <div class="step-navigation">
 <button class="btn-secondary back-btn">Back to Services</button>
 <button class="btn-primary continue-btn" disabled>Continue to Details</button>
 </div>
 </div>

 <!-- Step 3: Contact Information -->
 <div class="booking-step step-3">
 <h3>Your Information</h3>
 <div class="booking-summary">
 <h4>Booking Summary</h4>
 <div class="summary-details">
 <p><strong>Service:</strong> <span class="selected-service"></span></p>
 <p><strong>Date:</strong> <span class="selected-date"></span></p>
 <p><strong>Time:</strong> <span class="selected-time"></span></p>
 <p><strong>Duration:</strong> <span class="selected-duration"></span> minutes</p>
 <p><strong>Price:</strong> $<span class="selected-price"></span></p>
 </div>
 </div>
 <form id="appointmentForm" class="appointment-form">
 <div class="form-group">
 <label for="name">Full Name *</label>
 <input type="text" id="name" name="name" required>
 </div>
 
 <div class="form-group">
 <label for="email">Email Address *</label>
 <input type="email" id="email" name="email" required>
 </div>
 
 <div class="form-group">
 <label for="phone">Phone Number *</label>
 <input type="tel" id="phone" name="phone" required>
 </div>
 
 <div class="form-group">
 <label for="notes">Special Requests or Notes</label>
 <textarea id="notes" name="notes" rows="3" placeholder="Any specific areas of concern, allergies, or special requests..."></textarea>
 </div>
 
 <div class="step-navigation">
 <button type="button" class="btn-secondary back-btn">Back to Date & Time</button>
 <button type="submit" class="btn-primary">Book Appointment</button>
 </div>
 </form>
 </div>
 </div>
 `;
 
 
 initCalendarBooking();
 }
}


let currentBooking = {
 service: null,
 serviceData: null,
 date: null,
 time: null,
 currentMonth: new Date().getMonth(),
 currentYear: new Date().getFullYear()
};

function initCalendarBooking() {
 
 document.querySelectorAll('.service-option').forEach(option => {
 option.addEventListener('click', function() {
 
 document.querySelectorAll('.service-option').forEach(opt => opt.classList.remove('selected'));
 
 
 this.classList.add('selected');
 
 
 currentBooking.service = this.dataset.service;
 currentBooking.serviceData = {
 name: this.querySelector('h4').textContent,
 description: this.querySelector('p').textContent,
 duration: this.dataset.duration,
 price: this.dataset.price
 };
 
 
 document.querySelector('.step-1 .continue-btn').disabled = false;
 });
 });
 
 
 initCalendar();
 
 
 setupStepNavigation();
 
 
 setupFormSubmission();
}

function initCalendar() {
 renderCalendar();
 
 
 document.querySelector('.prev-month').addEventListener('click', () => {
 currentBooking.currentMonth--;
 if (currentBooking.currentMonth < 0) {
 currentBooking.currentMonth = 11;
 currentBooking.currentYear--;
 }
 renderCalendar();
 });
 
 document.querySelector('.next-month').addEventListener('click', () => {
 currentBooking.currentMonth++;
 if (currentBooking.currentMonth > 11) {
 currentBooking.currentMonth = 0;
 currentBooking.currentYear++;
 }
 renderCalendar();
 });
}

function renderCalendar() {
 const today = new Date();
 const firstDay = new Date(currentBooking.currentYear, currentBooking.currentMonth, 1);
 const lastDay = new Date(currentBooking.currentYear, currentBooking.currentMonth + 1, 0);
 const startDate = new Date(firstDay);
 startDate.setDate(startDate.getDate() - firstDay.getDay());
 
 
 const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
 'July', 'August', 'September', 'October', 'November', 'December'];
 document.querySelector('.calendar-title').textContent = 
 `${monthNames[currentBooking.currentMonth]} ${currentBooking.currentYear}`;
 
 
 const calendarDays = document.querySelector('.calendar-days');
 calendarDays.innerHTML = '';
 
 for (let i = 0; i < 42; i++) {
 const currentDate = new Date(startDate);
 currentDate.setDate(startDate.getDate() + i);
 
 const dayElement = document.createElement('div');
 dayElement.classList.add('calendar-day');
 dayElement.textContent = currentDate.getDate();
 
 
 if (currentDate.getMonth() !== currentBooking.currentMonth) {
 dayElement.classList.add('other-month');
 }
 
 
 if (currentDate < today.setHours(0, 0, 0, 0)) {
 dayElement.classList.add('past-date');
 }
 
 
 if (currentDate.getDay() === 0) {
 dayElement.classList.add('closed');
 dayElement.title = 'Closed on Sundays';
 }
 
 
 if (currentDate >= today && currentDate.getDay() !== 0 && currentDate.getMonth() === currentBooking.currentMonth) {
 dayElement.classList.add('available');
 dayElement.addEventListener('click', () => selectDate(currentDate, dayElement));
 }
 
 calendarDays.appendChild(dayElement);
 }
}

function selectDate(date, dayElement) {
 
 document.querySelectorAll('.calendar-day').forEach(day => day.classList.remove('selected'));
 
 
 dayElement.classList.add('selected');
 
 
 currentBooking.date = date;
 
 
 generateTimeSlots(date);
}

function generateTimeSlots(date) {
 const timeSlotsContainer = document.querySelector('.time-slots');
 timeSlotsContainer.innerHTML = '';
 
 
 let startHour, endHour;
 const dayOfWeek = date.getDay();
 
 if (dayOfWeek >= 1 && dayOfWeek <= 5) { 
 startHour = 9;
 endHour = 19; 
 } else if (dayOfWeek === 6) { 
 startHour = 9;
 endHour = 17; 
 } else { 
 timeSlotsContainer.innerHTML = '<p class="closed-message">Closed on Sundays</p>';
 return;
 }
 
 
 for (let hour = startHour; hour < endHour; hour++) {
 const timeSlot = document.createElement('button');
 timeSlot.classList.add('time-slot');
 timeSlot.textContent = formatTime(hour);
 timeSlot.dataset.time = hour;
 
 
 const isAvailable = Math.random() > 0.3; 
 
 if (isAvailable) {
 timeSlot.classList.add('available');
 timeSlot.addEventListener('click', () => selectTimeSlot(hour, timeSlot));
 } else {
 timeSlot.classList.add('unavailable');
 timeSlot.disabled = true;
 }
 
 timeSlotsContainer.appendChild(timeSlot);
 }
}

function formatTime(hour) {
 if (hour === 0) return '12:00 AM';
 if (hour < 12) return `${hour}:00 AM`;
 if (hour === 12) return '12:00 PM';
 return `${hour - 12}:00 PM`;
}

function selectTimeSlot(hour, timeSlotElement) {
 
 document.querySelectorAll('.time-slot').forEach(slot => slot.classList.remove('selected'));
 
 
 timeSlotElement.classList.add('selected');
 
 
 currentBooking.time = hour;
 
 
 document.querySelector('.step-2 .continue-btn').disabled = false;
}

function setupStepNavigation() {
 
 document.querySelectorAll('.continue-btn').forEach(btn => {
 btn.addEventListener('click', function() {
 const currentStep = this.closest('.booking-step');
 const stepNumber = Array.from(currentStep.parentElement.children).indexOf(currentStep) + 1;
 
 if (stepNumber === 1) {
 
 goToStep(2);
 } else if (stepNumber === 2) {
 
 updateBookingSummary();
 goToStep(3);
 }
 });
 });
 
 
 document.querySelectorAll('.back-btn').forEach(btn => {
 btn.addEventListener('click', function() {
 const currentStep = this.closest('.booking-step');
 const stepNumber = Array.from(currentStep.parentElement.children).indexOf(currentStep) + 1;
 
 if (stepNumber === 2) {
 goToStep(1);
 } else if (stepNumber === 3) {
 goToStep(2);
 }
 });
 });
}

function goToStep(stepNumber) {
 
 document.querySelectorAll('.step').forEach((step, index) => {
 if (index + 1 <= stepNumber) {
 step.classList.add('active');
 } else {
 step.classList.remove('active');
 }
 });
 
 
 document.querySelectorAll('.booking-step').forEach((step, index) => {
 if (index + 1 === stepNumber) {
 step.classList.add('active');
 } else {
 step.classList.remove('active');
 }
 });
}

function updateBookingSummary() {
 if (currentBooking.serviceData) {
 document.querySelector('.selected-service').textContent = currentBooking.serviceData.name;
 document.querySelector('.selected-duration').textContent = currentBooking.serviceData.duration;
 document.querySelector('.selected-price').textContent = currentBooking.serviceData.price;
 }
 
 if (currentBooking.date) {
 const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
 document.querySelector('.selected-date').textContent = currentBooking.date.toLocaleDateString('en-US', options);
 }
 
 if (currentBooking.time !== null) {
 document.querySelector('.selected-time').textContent = formatTime(currentBooking.time);
 }
}

function setupFormSubmission() {
 const appointmentForm = document.getElementById('appointmentForm');
 if (appointmentForm) {
 appointmentForm.addEventListener('submit', function(e) {
 e.preventDefault();
 
 
 const formData = new FormData(this);
 const appointmentData = {
 name: formData.get('name'),
 email: formData.get('email'),
 phone: formData.get('phone'),
 service: currentBooking.serviceData.name,
 date: currentBooking.date.toLocaleDateString(),
 time: formatTime(currentBooking.time),
 duration: currentBooking.serviceData.duration,
 price: currentBooking.serviceData.price,
 notes: formData.get('notes')
 };
 
 
 if (!appointmentData.name || !appointmentData.email || !appointmentData.phone) {
 alert('Please fill in all required fields.');
 return;
 }
 
 
 const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
 if (!emailRegex.test(appointmentData.email)) {
 alert('Please enter a valid email address.');
 return;
 }
 
 
 const phoneRegex = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
 if (!phoneRegex.test(appointmentData.phone)) {
 alert('Please enter a valid phone number.');
 return;
 }
 
 
 submitAppointment(appointmentData);
 });
 }
 
 
 setTimeout(() => {
 const phoneInput = document.getElementById('phone');
 if (phoneInput) {
 phoneInput.addEventListener('input', function(e) {
 e.target.value = formatPhoneNumber(e.target.value);
 });
 }
 }, 100);
}


if ('serviceWorker' in navigator) {
 window.addEventListener('load', () => {
 navigator.serviceWorker.register('/sw.js')
 .then((registration) => {
 console.log('SW registered: ', registration);
 })
 .catch((registrationError) => {
 console.log('SW registration failed: ', registrationError);
 });
 });
}
